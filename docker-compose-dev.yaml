version: '3.8'
services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbit:latest
    ports:
      - "5672:5672"  # Puerto para conexion con RabbitMQ
      - "15672:15672"  # Puerto para la interfaz de administracion
    networks:
      - system_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"] # -f hace q curl falle silenciosamente si la web no funciona
      interval: 10s #verifica salud de rabbit each 10 s
      timeout: 5s # si rabbit no responde en 5s falla 
      retries: 10 # luego de 10 intentos => no es saludable

  client1:
    container_name: client1
    image: client:latest
    volumes:
      - ./data/games/games.csv:/data/games.csv
      - ./data/reviews/dataset.csv:/data/dataset.csv
    environment:
      - NODE_ID=1
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
    entrypoint: python3 /app/client/main.py
    networks:
      - system_network
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      input:
        condition: service_started  # Puede esperar simplemente a que el sistema se haya iniciado    

  # input de abraham NO LO BORRES @KEVIN 
  input:
    container_name: input
    image: input:latest
    entrypoint: python3 /app/system/controllers/input/main.py 
    environment:
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
    networks:
      - system_network
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy  # Espera hasta que RabbitMQ esté saludable

 #Select Q1. No borrar 
  selectQ1:
    container_name: selectQ1
    image: selectq1:latest
    entrypoint: python3 /app/system/controllers/select/selectQ1/main.py
    environment:
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
    networks:
      - system_network
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy  # Espera hasta que RabbitMQ esté saludable
      input:
        condition: service_started  # Puede esperar simplemente a que el sistema se haya iniciado  

 #Select Q1. No borrar 
  platformcounter_1:
    container_name: platformcounter_1
    image: platformcounter:latest
    entrypoint: python3 /app/system/controllers/groupers/platformCounter/main.py
    environment:
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
      - NODE_NAME=platformcounter_1
      - NODE_ID=6
      - SOURCE=GamesPlatform
      - SINK=
    networks:
      - system_network
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy  # Espera hasta que RabbitMQ esté saludable
      selectQ1:
        condition: service_started  # Puede esperar simplemente a que el sistema se haya iniciado  

# No tocar 
#  platformcounter_1:
#    container_name: platformcounter_1
#    build:
#      context: .
#      dockerfile: system/controllers/groupers/platformCounter/Dockerfile
#    networks:
#      - system_network
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
#    environment:
#      - NODE_NAME="platformcounter_1"
#      - NODE_ID=6
#      - SOURCE=GamesPlatform
#      - SINK=
#      - LOGGING_LEVEL=INFO
#

  output:
    container_name: output
    build:
      context: .
      dockerfile: system/controllers/output/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="output"
      - NODE_ID=3
      - SOURCE="response_exchange"
      - SINK=""
      - LOGGING_LEVEL=INFO

  platformreducer:
    container_name: platformreducer
    build:
      context: .
      dockerfile: system/controllers/groupers/platformCounter/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="platformreducer"
      - NODE_ID=4
      - SOURCE="CountByPlatform"
      - SINK=""
      - LOGGING_LEVEL=INFO

  # sortertop10averageplaytime:
  #   container_name: sortertop10averageplaytime
  #   build:
  #     context: .
  #     dockerfile: sortertop10averageplaytime/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     - rabbitmq

  groupertopreviewspositiveindie:
    container_name: groupertopreviewspositiveindie
    build:
      context: .
      dockerfile: system/controllers/groupers/grouperTopReviewsPositiveIndie/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="groupertopreviewspositiveindie"
      - NODE_ID=5
      - SOURCE=""
      - SINK=""
      - LOGGING_LEVEL=INFO
      

  # gamein90thpercentile:
  #   container_name: gamein90thpercentile
  #   build:
  #     context: .
  #     dockerfile: system/controllers/gamein90thpercentile/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     - rabbitmq

  filterbasic_1:
    container_name: filterbasic_1
    build:
      context: .
      dockerfile: system/controllers/filters/filterBasic/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="filterbasic_1"
      - NODE_ID=6
      - SOURCE=DataRaw
      - SINK=
      - LOGGING_LEVEL=INFO


  selectq2345_1:
    container_name: selectq2345_1
    build:
      context: .
      dockerfile: system/controllers/select/selectQ2345/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="selectq2345_1"
      - NODE_ID=6
      - SOURCE=DataParsed
      - SINK=
      - LOGGING_LEVEL=INFO

  filtergender_1:
    container_name: filtergender_1
    build:
      context: .
      dockerfile: system/controllers/filters/filterGender/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="filtergender_1"
      - NODE_ID=6
      - SOURCE=GamesQ2345
      - SINK=
      - LOGGING_LEVEL=INFO

  filterdecade_1:
    container_name: filterdecade_1
    build:
      context: .
      dockerfile: system/controllers/filters/filterDecade/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="filterdecade_1"
      - NODE_ID=6
      - SOURCE=GamesIndieQ2
      - SINK=
      - LOGGING_LEVEL=INFO

  selectidnameindie_1:
    container_name: selectidnameindie_1
    build:
      context: .
      dockerfile: system/controllers/select/selectIDNameIndie/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="selectidnameindie_1"
      - NODE_ID=6
      - SOURCE=GamesIndieQ3
      - SINK=
      - LOGGING_LEVEL=INFO

  selectidnameaction_1:
    container_name: selectidnameaction_1
    build:
      context: .
      dockerfile: system/controllers/select/selectIDNameAction/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="selectidnameaction_1"
      - NODE_ID=6
      - SOURCE=GamesActionQ45
      - SINK=
      - LOGGING_LEVEL=INFO

  selectq345_1:
    container_name: selectq345_1
    build:
      context: .
      dockerfile: system/controllers/select/selectQ345/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="selectq345_1"
      - NODE_ID=6
      - SOURCE=DataParsed
      - SINK=
      - LOGGING_LEVEL=INFO

  filterscorepositive_1:
    container_name: filterscorepositive_1
    build:
      context: .
      dockerfile: system/controllers/filters/filterScorePositive/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="filterscorepositive_1"
      - NODE_ID=6
      - SOURCE=ERROR
      - SINK=ERROR
      - LOGGING_LEVEL=INFO

  filterreviewenglish_1:
    container_name: filterreviewenglish_1
    build:
      context: .
      dockerfile: system/controllers/filters/filterReviewEnglish/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="filterreviewenglish_1"
      - NODE_ID=6
      - SOURCE=GamesActionPositives
      - SINK=
      - LOGGING_LEVEL=INFO

  filterscorexpositives_1:
    container_name: filterscorexpositives_1
    build:
      context: .
      dockerfile: system/controllers/filters/filterScoreXPositives/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="filterscorexpositives_1"
      - NODE_ID=6
      - SOURCE=ERROR
      - SINK=ERROR
      - LOGGING_LEVEL=INFO

  filterscorenegative_1:
    container_name: filterscorenegative_1
    build:
      context: .
      dockerfile: system/controllers/filters/filterScoreNegative/Dockerfile
    networks:
      - system_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_NAME="filterscorenegative_1"
      - NODE_ID=6
      - SOURCE=ReviewsRaw
      - SINK=
      - LOGGING_LEVEL=INFO

networks:
  system_network:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
