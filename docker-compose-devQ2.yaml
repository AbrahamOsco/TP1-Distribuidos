version: '3.8'
services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbit:latest
    ports:
      - "5672:5672"  # Puerto para conexion con RabbitMQ
      - "15672:15672"  # Puerto para la interfaz de administracion
    networks:
      - system_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"] # -f hace q curl falle silenciosamente si la web no funciona
      interval: 10s #verifica salud de rabbit each 10 s
      timeout: 5s # si rabbit no responde en 5s falla 
      retries: 10 # luego de 10 intentos => no es saludable
      start_period: 15s

  client1:
    container_name: client1
    image: client:latest
    volumes:
      - ./data/games.csv:/data/games.csv
      - ./data/dataset.csv:/data/dataset.csv
    environment:
      - NODE_ID=1
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
      - HOSTNAME=gateway
    entrypoint: python3 /app/client/main.py
    networks:
      - system_network
    restart: on-failure
    depends_on:
      - rabbitmq
      - gateway

  gateway:
    container_name: gateway
    image: gateway:latest
    entrypoint: python3 /app/system/controllers/gateway/main.py 
    environment:
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
      - SINK=DataParsed
    networks:
      - system_network
    restart: on-failure
    depends_on:
      - rabbitmq
      - selectQ2345
      # - filterscorepositive_1
      # selectQ1:
      #   condition: service_started

  # selectQ1:
  #   container_name: selectQ1
  #   image: selectq1:latest
  #   entrypoint: python3 /app/system/controllers/select/selectQ1/main.py
  #   environment:
  #     - LOGGING_LEVEL=INFO
  #     - PYTHONPATH=/app
  #     - NODE_NAME=selectQ1
  #     - NODE_ID=2
  #     - SOURCE=DataParsed
  #     - SOURCE_KEY=games
  #     - SOURCE_TYPE=topic
  #     - SINK=GamesPlatform
  #   networks:
  #     - system_network
  #   restart: on-failure
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy  # Espera hasta que RabbitMQ esté saludable
  #     platformcounter_1:
  #       condition: service_started 

  selectQ2345:
    container_name: selectQ2345
    image: selectq2345:latest
    entrypoint: python3 /app/system/controllers/select/selectQ2345/main.py
    environment:
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
      - NODE_NAME=selectQ2345
      - NODE_ID=1
      - SOURCE=DataParsed
      - SOURCE_KEY=games
      - SOURCE_TYPE=topic
      - SINK=GamesQ2345
    networks:
      - system_network
    restart: on-failure
    depends_on:
      - rabbitmq
      - filtergender_1

  # selectQ345:
  #   container_name: selectQ345
  #   image: selectq345:latest
  #   entrypoint: python3 /app/system/controllers/select/selectQ345/main.py
  #   environment:
  #     - LOGGING_LEVEL=INFO
  #     - PYTHONPATH=/app
  #     - NODE_NAME=selectQ345
  #     - NODE_ID=1
  #     - SOURCE=DataParsed
  #     - SOURCE_KEY=reviews
  #     - SOURCE_TYPE=topic
  #     - SINK=ReviewsQ345
  #   networks:
  #     - system_network
  #   restart: on-failure
  #   depends_on:
  #     - rabbitmq
  #     - filterscorepositive_1

  # platformcounter_1:
  #   container_name: platformcounter_1
  #   image: platformcounter:latest
  #   entrypoint: python3 /app/system/controllers/groupers/platformCounter/main.py
  #   environment:
  #     - LOGGING_LEVEL=INFO
  #     - PYTHONPATH=/app
  #     - NODE_NAME=platformcounter_1
  #     - NODE_ID=6
  #     - SOURCE=GamesPlatform
  #     - SINK=countbyplatform
  #   networks:
  #     - system_network
  #   restart: on-failure
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy  # Espera hasta que RabbitMQ esté saludable
  #     platformreducer:
  #       condition: service_started  

  # output:
  #   container_name: output
  #   build:
  #     context: .
  #     dockerfile: system/controllers/output/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   environment:
  #     - NODE_NAME="output"
  #     - NODE_ID=3
  #     - SOURCE="response_exchange"
  #     - SINK=""
  #     - LOGGING_LEVEL=INFO

  # platformreducer:
  #   container_name: platformreducer
  #   image: platformcounter:latest
  #   entrypoint: python3 /app/system/controllers/groupers/platformCounter/main.py
  #   networks:
  #     - system_network
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   environment:
  #     - NODE_NAME="platformreducer"
  #     - NODE_ID=4
  #     - SOURCE="countbyplatform"
  #     - SINK="output"
  #     - LOGGING_LEVEL=INFO

  filtergender_1:
    container_name: filtergender_1
    image: filtergender:latest
    entrypoint: python3 /app/system/controllers/filters/filterGender/main.py
    networks:
      - system_network
    environment:
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
      - NODE_NAME=filtergender
      - NODE_ID=1
      - SOURCE=GamesQ2345
      - SINK=GenderGames
      - SINK_TYPE=topic
      - LOGGING_LEVEL=INFO
      - GENDERS=Indie,Action
    depends_on:
      - rabbitmq
      # - selectidname
      - filterdecade_1

  # selectidname:
  #   container_name: selectidname
  #   image: selectidname:latest
  #   entrypoint: python3 /app/system/controllers/select/selectIDName/main.py
  #   environment:
  #     - LOGGING_LEVEL=INFO
  #     - PYTHONPATH=/app
  #     - NODE_NAME=selectidname
  #     - NODE_ID=1
  #     - SOURCE=GenderGames
  #     - SOURCE_KEY=Indie
  #     - SOURCE_TYPE=topic
  #     - SINK=MonitorQ3Games
  #   networks:
  #     - system_network
  #   restart: on-failure
  #   depends_on:
  #     - rabbitmq
  #     - monitorstorageq3

  # filterscorepositive_1:
  #   container_name: filterscorepositive_1
  #   image: filterscorepositive:latest
  #   entrypoint: python3 /app/system/controllers/filters/filterScorePositive/main.py
  #   networks:
  #     - system_network
  #   environment:
  #     - LOGGING_LEVEL=INFO
  #     - PYTHONPATH=/app
  #     - NODE_NAME=filterscorepositive
  #     - NODE_ID=1
  #     - SOURCE=DataParsed
  #     - SOURCE_KEY=reviews
  #     - SOURCE_TYPE=topic
  #     - SINK=ReviewsPositives
  #   depends_on:
  #     - rabbitmq
  #     - monitorstorageq3
      
  # monitorstorageq3:
  #   container_name: monitorstorageq3
  #   image: monitorstorageq3:latest
  #   entrypoint: python3 /app/system/controllers/storages/monitorStorageQ3/main.py
  #   networks:
  #     - system_network
  #   depends_on:
  #     - rabbitmq
  #     - groupertopreviewspositiveindie
  #   environment:
  #     - LOGGING_LEVEL=INFO
  #     - PYTHONPATH=/app
  #     - NODE_NAME=monitorstorageq3
  #     - NODE_ID=1
  #     - SOURCE=ReviewsPositives,MonitorQ3Games
  #     - SOURCE_KEY=default,default
  #     - SOURCE_TYPE=direct,direct
  #     - SINK=IndieGamesReviewed

  filterdecade_1:
    container_name: filterdecade_1
    image: filterdecade:latest
    entrypoint: python3 /app/system/controllers/filters/filterDecade/main.py
    networks:
      - system_network
    environment:
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
      - NODE_NAME=filterdecade
      - NODE_ID=1
      - SOURCE=GenderGames
      - SOURCE_KEY=Indie
      - SINK=DecadeGames
      - DECADE=2010
    depends_on:
      - rabbitmq
      - groupertopaverageplaytime

  # # sortertop10averageplaytime:
  groupertopaverageplaytime:
    container_name: groupertopaverageplaytime
    image: groupertopaverageplaytime:latest
    entrypoint: python3 /app/system/controllers/groupers/grouperTopAveragePlaytime/main.py
    networks:
      - system_network
    depends_on:
      - rabbitmq
    environment:
      - LOGGING_LEVEL=INFO
      - PYTHONPATH=/app
      - NODE_NAME=groupertopaverageplaytime
      - NODE_ID=1
      - SOURCE=DecadeGames
      - SINK=output
      - TOP_SIZE=10

  # groupertopreviewspositiveindie:
  #   container_name: groupertopreviewspositiveindie
  #   image: groupertopreviewspositiveindie:latest
  #   entrypoint: python3 /app/system/controllers/groupers/grouperTopReviewsPositiveIndie/main.py
  #   networks:
  #     - system_network
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     - LOGGING_LEVEL=INFO
  #     - PYTHONPATH=/app
  #     - NODE_NAME=groupertopreviewspositiveindie
  #     - NODE_ID=1
  #     - SOURCE=IndieGamesReviewed
  #     - SINK=output
  #     - TOP_SIZE=5

  # groupertopreviewspositiveindie:
  #   container_name: groupertopreviewspositiveindie
  #   build:
  #     context: .
  #     dockerfile: system/controllers/groupers/grouperTopReviewsPositiveIndie/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   environment:
  #     - NODE_NAME="groupertopreviewspositiveindie"
  #     - NODE_ID=5
  #     - SOURCE=""
  #     - SINK=""
  #     - LOGGING_LEVEL=INFO
      

  # gamein90thpercentile:
  #   container_name: gamein90thpercentile
  #   build:
  #     context: .
  #     dockerfile: system/controllers/gamein90thpercentile/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     - rabbitmq




  # selectq2345_1:
  #   container_name: selectq2345_1
  #   build:
  #     context: .
  #     dockerfile: system/controllers/select/selectQ2345/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   environment:
  #     - NODE_NAME="selectq2345_1"
  #     - NODE_ID=6
  #     - SOURCE=DataParsed
  #     - SINK=
  #     - LOGGING_LEVEL=INFO

  # filterdecade_1:
  #   container_name: filterdecade_1
  #   build:
  #     context: .
  #     dockerfile: system/controllers/filters/filterDecade/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   environment:
  #     - NODE_NAME="filterdecade_1"
  #     - NODE_ID=6
  #     - SOURCE=GamesIndieQ2
  #     - SINK=
  #     - LOGGING_LEVEL=INFO

  # selectq345_1:
  #   container_name: selectq345_1
  #   build:
  #     context: .
  #     dockerfile: system/controllers/select/selectQ345/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   environment:
  #     - NODE_NAME="selectq345_1"
  #     - NODE_ID=6
  #     - SOURCE=DataParsed
  #     - SINK=
  #     - LOGGING_LEVEL=INFO

  # filterreviewenglish_1:
  #   container_name: filterreviewenglish_1
  #   build:
  #     context: .
  #     dockerfile: system/controllers/filters/filterReviewEnglish/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   environment:
  #     - NODE_NAME="filterreviewenglish_1"
  #     - NODE_ID=6
  #     - SOURCE=GamesActionPositives
  #     - SINK=
  #     - LOGGING_LEVEL=INFO

  # filterscorexpositives_1:
  #   container_name: filterscorexpositives_1
  #   build:
  #     context: .
  #     dockerfile: system/controllers/filters/filterScoreXPositives/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   environment:
  #     - NODE_NAME="filterscorexpositives_1"
  #     - NODE_ID=6
  #     - SOURCE=ERROR
  #     - SINK=ERROR
  #     - LOGGING_LEVEL=INFO

  # filterscorenegative_1:
  #   container_name: filterscorenegative_1
  #   build:
  #     context: .
  #     dockerfile: system/controllers/filters/filterScoreNegative/Dockerfile
  #   networks:
  #     - system_network
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   environment:
  #     - NODE_NAME="filterscorenegative_1"
  #     - NODE_ID=6
  #     - SOURCE=ReviewsRaw
  #     - SINK=
  #     - LOGGING_LEVEL=INFO

networks:
  system_network:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
